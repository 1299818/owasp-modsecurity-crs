

# ------------------------------------------------------------------------
# OWASP ModSecurity Core Rule Set ver.3.0.0
# Copyright (c) 2006-2016 Trustwave and contributors. All rights reserved.
#
# The OWASP ModSecurity Core Rule Set is distributed under
# Apache Software License (ASL) version 2
# Please see the enclosed LICENSE file for full details.
# ------------------------------------------------------------------------

# These exclusions remedy false positives in a default Drupal install.
# The exclusions are only active if crs_exclusions_drupal=1 is set.
# See rule 900130 in crs-setup.conf.example for instructions.

#
# POLICY 
#
# Drupal is a complex application that is hard to secure with the CRS. This set
# of exclusion rules aims to sanitise the CRS in a way that allows a default
# Drupal install to be installed and configured without much hassle as far as
# ModSecurity and the CRS are concerned.
#
# The exclusion rules are fairly straight forward in the sense that they
# disable CRS on a set of well-known parameter fields, that are known to be a
# source of false positives / false alarms of the CRS. This includes namely the
# password fields and article/node bodies.
#
# This is based on two assumptions: - You have a basic trust in your
# authenticated users who are allowed to edit nodes.  - Drupal allows html
# content in nodes and protects your users from attacks via these fields.
#
# If you think these assumptions are wrong or if you would prefer a more
# careful/secure approach, you can disable the exclusion rules handling said
# node body false positives. Do this by placing the following directive in
# RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf.
#
# SecRuleRemoveById 9001200-9001299
#
# This will mean the CRS remain intact for the editing of node bodies.
#
# The CRS rules covered by this ruleset are the rules with Paranoia Level 1 and
# 2. If you chose to run Paranoia Level 3 or 4, you will be facing additional
# false positives which you need to handle yourself.
#
# This set of exclusion rules does not cover any additional Drupal modules
# outside of core.
#
# The exclusion rules are based on a Drupal 8.1.10.
#
# And finally: This set of exclusion rules is in an experimental stage. If you
# encounter false positives with the basic Drupal functionality and they are
# not covered by this rule file, then please report them. The aim is to be able
# to run Drupal core in a seamless manner protected by ModSecurity / CRS up to
# the paranoia level 2.


SecRule &TX:crs_exclusions_drupal|TX:crs_exclusions_drupal "@eq 0" \
	"id:9001000,\
	phase:2,\
	t:none,\
	nolog,\
	pass,\
	skipAfter:END-DRUPAL-RULE-EXCLUSIONS"

#
# [ Password ]
#
# Disable the CRS completely for all occurrences of passwords.
#
SecRule REQUEST_FILENAME "@endsWith /core/install.php" \
	"id:9001100,\
	phase:2,\
	nolog,\
	pass,\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:account[pass][pass1],\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:account[pass][pass2]"

SecRule REQUEST_FILENAME "@endsWith /user/login" \
	"id:9001110,\
	phase:2,\
	t:none,\
	nolog,\
	pass,\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:pass"

SecRule REQUEST_FILENAME "@endsWith /admin/people/create" \
	"id:9001120,\
	phase:2,\
	nolog,\
	pass,\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:pass[pass1],\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:pass[pass2]"

SecRule REQUEST_FILENAME "@rx /user/[0-9]+/edit$" \
	"id:9001130,\
	phase:2,\
	nolog,\
	pass,\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:current_pass,\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:pass[pass1],\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:pass[pass2]"


#
# [ Content and Descriptions ]
#
# Disable the CRS completely for node bodies and other free text fields.
#

SecRule REQUEST_FILENAME "@endsWith /node/add/article" \
	"id:9001200,\
	phase:2,\
	nolog,\
	pass,\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:body[0][value],\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:uid[0][target_id]"

SecRule REQUEST_FILENAME "@endsWith /node/add/page" \
	"id:9001210,\
	phase:2,\
	nolog,\
	pass,\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:body[0][value],\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:uid[0][target_id]"

SecRule REQUEST_FILENAME "@rx /node/[0-9]+/edit$" \
	"id:9001220,\
	phase:2,\
	nolog,\
	pass,\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:body[0][value],\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:uid[0][target_id]"

SecRule REQUEST_FILENAME "@endsWith /block/add" \
	"id:9001230,\
	phase:2,\
	nolog,\
	pass,\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:body[0][value]"

SecRule REQUEST_FILENAME "@endsWith /admin/structure/block/block-content/manage/basic"
	"id:9001240,\
	phase:2,\
	nolog,\
	pass,\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:description"

SecRule REQUEST_FILENAME "@rx /editor/filter_xss/(full|basic)_html" \
	"id:9001250,\
	phase:2,\
	nolog,\
	pass,\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:value"

SecRule REQUEST_FILENAME "@rx /user/[0-9]+/contact" \
	"id:9001260,\
	phase:2,\
	nolog,\
	pass,\
	ctl:ruleRemoveTargetByTag=CRS;ARGS:message[0][value]"


#
# [ Content and Descriptions ]
# 
# Disable known false positives for field "ids[]"
#
# Rule Exclusion: 942130 SQL Injection Attack: SQL Tautology Detected
#
SecRule REQUEST_FILENAME "@endsWith /contextual/render" \
	"id:9001250,\
	phase:2,\
	nolog,\
	pass,\
	ctl:ruleRemoveTargetById=942130;ARGS:ids[]"


SecMarker END-DRUPAL-RULE-EXCLUSIONS
