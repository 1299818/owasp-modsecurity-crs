# ------------------------------------------------------------------------
# OWASP ModSecurity Core Rule Set ver.3.0.2
# Copyright (c) 2006-2016 Trustwave and contributors. All rights reserved.
#
# The OWASP ModSecurity Core Rule Set is distributed under
# Apache Software License (ASL) version 2
# Please see the enclosed LICENSE file for full details.
#
# ------------------------------------------------------------------------

# These exclusions remedy false positives in a default NextCloud install.
# They will likely work with OwnCloud too, but you may have to modify them.
# The exclusions are only active if crs_exclusions_nextcloud=1 is set.
# See rule 900130 in crs-setup.conf.example for instructions.
#
# To relax upload restrictions for only the php files that need it,
# you put something like this in crs-setup.conf:
#
# SecRule REQUEST_FILENAME "@rx /(remote.php|index.php)/" \
#   "id:9012330,\
#   phase:1,\
#   t:none,\
#   nolog,\
#   pass,\
#   tx.restricted_extensions='.bak/ .config/ .conf/'"
#
# Large uploads can be modified with SecRequestBodyLimit. Or they
# can be more controlled by using the following:
#
# SecRule REQUEST_URI "@endsWith /index.php/apps/files/ajax/upload.php" \
#    "id:9012610,\
#    phase:1,\
#    t:none,\
#    nolog,\
#    ctl:requestBodyLimit=1073741824"
#
# ---------------------


SecRule &TX:crs_exclusions_nextcloud|TX:crs_exclusions_nextcloud "@eq 0" \
    "id:9012000,\
    phase:1,\
    t:none,\
    nolog,\
    pass,\
    skipAfter:END-NEXTCLOUD"

SecRule &TX:crs_exclusions_nextcloud|TX:crs_exclusions_nextcloud "@eq 0" \
    "id:9012001,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    skipAfter:END-NEXTCLOUD"

#
## File Manager
#

# The web interface uploads files, and interacts with the user.

SecRule REQUEST_FILENAME "@contains /remote.php/webdav" \
    "id:9012100,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    ctl:ruleRemoveByTAG=attack-injection-php,\
    ctl:ruleRemoveByID=941000-942999,\
    ctl:ruleRemoveByID=920420"


## Allow the data type 'text/vcard'

SecRule REQUEST_FILENAME "@contains /remote.php/dav/files/" \
    "id:9012110,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    setvar:'tx.allowed_request_content_type=%{tx.allowed_request_content_type}|text/vcard'"


## Allow characters like /../ in files.

SecRule REQUEST_FILENAME "@contains /remote.php/dav/files/" \
    "id:9012120,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    ctl:ruleRemoveByID=930100-930110"


# NextCloud uses DAV methods with index.php and remote.php to do many things
# The default ones in ModSecurity are: GET HEAD POST OPTIONS
#
# Looking through the code, and via testing, I found these:
#
# File manager: PUT DELETE MOVE PROPFIND PROPPATCH
# Calendars: REPORT
# Others in the code or js files: PATCH MKCOL MOVE TRACE
# Others that I added just in case, and they seem related:
#   CHECKOUT COPY LOCK MERGE MKACTIVITY UNLOCK.

SecRule REQUEST_FILENAME "@rx /(remote.php|index.php)/" \
    "id:9012130,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    setvar:'tx.allowed_methods=%{tx.allowed_methods} PUT PATCH CHECKOUT COPY DELETE LOCK MERGE MKACTIVITY MKCOL MOVE PROPFIND PROPPATCH UNLOCK REPORT TRACE jsonp'"


# We need to allow DAV methods for sharing files, and removing shares
# DELETE - when the share is removed
# PUT - when setting a password / expiration time

SecRule REQUEST_FILENAME "@contains /ocs/v2.php/apps/files_sharing/" \
    "id:9012140,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    setvar:'tx.allowed_methods=%{tx.allowed_methods} PUT DELETE'"


# for /index.php/core/preview.png

SecRule REQUEST_FILENAME "@contains /index.php/core/preview.png" \
    "id:9012150,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    ctl:ruleRemoveTargetByID=932150;ARGS:file"


# For showing thumbnails

SecRule REQUEST_FILENAME "@contains /index.php/apps/gallery/thumbnails" \
    "id:9012160,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    ctl:ruleRemoveByID=941120;ARGS:requesttoken"


# Note: this rule was only blocking it, it didn't show the number
# but was able to do some trial and error and find it.

SecRule REQUEST_FILENAME "@contains /index.php/apps/ownnote/" \
    "id:9012300,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    ctl:ruleRemoveByID=941150"


# Text Editor. This file can save anything, and it's name could be lots of things.

SecRule REQUEST_FILENAME "@contains /index.php/apps/files_texteditor/" \
    "id:9012310,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    ctl:ruleRemoveTargetByTag=CRS;ARGS:filecontents,\
    ctl:ruleRemoveTargetByID=921110-921160;ARGS:filecontents,\
    ctl:ruleRemoveByID=932150;ARGS:filename,\
    ctl:ruleRemoveByID=920370-920390;ARGS:filecontents,\
    ctl:ruleRemoveByID=920370-920390;ARGS_COMBINED_SIZE"



## Address Book. Allow the data type 'text/vcard'

SecRule REQUEST_FILENAME "@contains /remote.php/dav/addressbooks/" \
    "id:9012320,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    setvar:'tx.allowed_request_content_type=%{tx.allowed_request_content_type}|text/vcard'"


## Calendar. Allow the data type 'text/calendar'

SecRule REQUEST_FILENAME "@contains /remote.php/dav/calendars/" \
    "id:9012330,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    setvar:'tx.allowed_request_content_type=%{tx.allowed_request_content_type}|text/calendar'"


# Notes. We want to allow a lot of things as the user is
# allowed to note on anything.

SecRule REQUEST_FILENAME "@contains /index.php/apps/notes/" \
    "id:9012340,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    ctl:ruleRemoveByTAG=attack-injection-php"


# Bookmarks. Allow urls in data.

SecRule REQUEST_FILENAME "@contains /index.php/apps/bookmarks/" \
    "id:9012350,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    ctl:ruleRemoveByID=931130"


#
# [ Login forms ]
#

# This removes checks on the 'password' and related fields:

# User login password.

SecRule REQUEST_FILENAME "@contains /index.php/login" \
    "id:9012400,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    ctl:ruleRemoveTargetByTag=CRS;ARGS:password"

# Reset password.

SecRule REQUEST_FILENAME "@endsWith /index.php/login" \
    "id:9012410,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    chain"
    SecRule ARGS:action "@streq resetpass" \
        "t:none,\
        chain"
        SecRule &ARGS:action "@eq 1" \
            "t:none,\
            ctl:ruleRemoveTargetByTag=CRS;ARGS:pass1,\
            ctl:ruleRemoveTargetByTag=CRS;ARGS:pass1-text,\
            ctl:ruleRemoveTargetByTag=CRS;ARGS:pass2"

# Change Password and Setting up a new user/password

SecRule REQUEST_FILENAME "@endsWith /index.php/settings/users" \
    "id:9012500,\
    phase:2,\
    t:none,\
    nolog,\
    pass,\
    ctl:ruleRemoveTargetByTag=CRS;ARGS:newuserpassword,\
    ctl:ruleRemoveTargetByTag=CRS;ARGS:password"


SecMarker END-NEXTCLOUD-ADMIN


SecMarker END-NEXTCLOUD
